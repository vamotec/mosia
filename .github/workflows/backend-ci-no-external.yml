name: Backend CI (No External Dependencies)

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/main_service/moscala/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/main_service/moscala/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend-api

jobs:
  test:
    name: Test & Quality Check
    runs-on: ubuntu-latest
    
    # 在GitHub Actions中启动测试数据库
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: mosia_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'sbt'

    - name: Cache SBT dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier
        key: ${{ runner.os }}-sbt-${{ hashFiles('backend/main_service/moscala/build.sbt', 'backend/main_service/moscala/project/**') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Compile code
      working-directory: backend/main_service/moscala
      run: |
        echo "📦 Compiling Scala code..."
        sbt compile

    - name: Check code formatting
      working-directory: backend/main_service/moscala
      run: |
        echo "🎨 Checking code formatting..."
        sbt check

    - name: Run tests (when available)
      working-directory: backend/main_service/moscala
      env:
        DB_DEFAULT_URL: jdbc:postgresql://localhost:5432/mosia_test
        DB_DEFAULT_USER: postgres
        DB_DEFAULT_PASSWORD: postgres
      run: |
        echo "🧪 Running tests..."
        # 当你有测试时，取消下面的注释
        # sbt test
        echo "✅ Test step completed (no tests yet)"

    - name: Build assembly JAR
      working-directory: backend/main_service/moscala
      run: |
        echo "🏗️ Building application JAR..."
        sbt assembly
        echo "✅ Assembly build completed!"

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: backend/main_service/moscala
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Image build summary
      run: |
        echo "✅ Docker image built and pushed successfully!"
        echo "📦 Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "🏷️ Tags: ${{ steps.meta.outputs.tags }}"