# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import agents_service_pb2 as agents__service__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in agents_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AgentsServiceStub(object):
    """Main Agents Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AnalyzeContent = channel.unary_unary(
                '/agents.AgentsService/AnalyzeContent',
                request_serializer=agents__service__pb2.ContentAnalysisRequest.SerializeToString,
                response_deserializer=agents__service__pb2.ContentAnalysisResponse.FromString,
                _registered_method=True)
        self.ExtractKeywords = channel.unary_unary(
                '/agents.AgentsService/ExtractKeywords',
                request_serializer=agents__service__pb2.KeywordExtractionRequest.SerializeToString,
                response_deserializer=agents__service__pb2.KeywordExtractionResponse.FromString,
                _registered_method=True)
        self.AnalyzeSentiment = channel.unary_unary(
                '/agents.AgentsService/AnalyzeSentiment',
                request_serializer=agents__service__pb2.SentimentAnalysisRequest.SerializeToString,
                response_deserializer=agents__service__pb2.SentimentAnalysisResponse.FromString,
                _registered_method=True)
        self.GetRecommendations = channel.unary_unary(
                '/agents.AgentsService/GetRecommendations',
                request_serializer=agents__service__pb2.RecommendationRequest.SerializeToString,
                response_deserializer=agents__service__pb2.RecommendationResponse.FromString,
                _registered_method=True)
        self.UpdateUserPreferences = channel.unary_unary(
                '/agents.AgentsService/UpdateUserPreferences',
                request_serializer=agents__service__pb2.UserPreferencesRequest.SerializeToString,
                response_deserializer=agents__service__pb2.UserPreferencesResponse.FromString,
                _registered_method=True)
        self.GenerateContent = channel.unary_unary(
                '/agents.AgentsService/GenerateContent',
                request_serializer=agents__service__pb2.ContentGenerationRequest.SerializeToString,
                response_deserializer=agents__service__pb2.ContentGenerationResponse.FromString,
                _registered_method=True)
        self.SummarizeText = channel.unary_unary(
                '/agents.AgentsService/SummarizeText',
                request_serializer=agents__service__pb2.SummarizationRequest.SerializeToString,
                response_deserializer=agents__service__pb2.SummarizationResponse.FromString,
                _registered_method=True)
        self.ProcessChat = channel.unary_unary(
                '/agents.AgentsService/ProcessChat',
                request_serializer=agents__service__pb2.ChatRequest.SerializeToString,
                response_deserializer=agents__service__pb2.ChatResponse.FromString,
                _registered_method=True)
        self.GetChatHistory = channel.unary_unary(
                '/agents.AgentsService/GetChatHistory',
                request_serializer=agents__service__pb2.ChatHistoryRequest.SerializeToString,
                response_deserializer=agents__service__pb2.ChatHistoryResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/agents.AgentsService/HealthCheck',
                request_serializer=agents__service__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=agents__service__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class AgentsServiceServicer(object):
    """Main Agents Service
    """

    def AnalyzeContent(self, request, context):
        """Content Analysis
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractKeywords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeSentiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecommendations(self, request, context):
        """Recommendations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserPreferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateContent(self, request, context):
        """Content Generation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SummarizeText(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessChat(self, request, context):
        """Conversational AI
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health Check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AnalyzeContent': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeContent,
                    request_deserializer=agents__service__pb2.ContentAnalysisRequest.FromString,
                    response_serializer=agents__service__pb2.ContentAnalysisResponse.SerializeToString,
            ),
            'ExtractKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractKeywords,
                    request_deserializer=agents__service__pb2.KeywordExtractionRequest.FromString,
                    response_serializer=agents__service__pb2.KeywordExtractionResponse.SerializeToString,
            ),
            'AnalyzeSentiment': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeSentiment,
                    request_deserializer=agents__service__pb2.SentimentAnalysisRequest.FromString,
                    response_serializer=agents__service__pb2.SentimentAnalysisResponse.SerializeToString,
            ),
            'GetRecommendations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecommendations,
                    request_deserializer=agents__service__pb2.RecommendationRequest.FromString,
                    response_serializer=agents__service__pb2.RecommendationResponse.SerializeToString,
            ),
            'UpdateUserPreferences': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserPreferences,
                    request_deserializer=agents__service__pb2.UserPreferencesRequest.FromString,
                    response_serializer=agents__service__pb2.UserPreferencesResponse.SerializeToString,
            ),
            'GenerateContent': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateContent,
                    request_deserializer=agents__service__pb2.ContentGenerationRequest.FromString,
                    response_serializer=agents__service__pb2.ContentGenerationResponse.SerializeToString,
            ),
            'SummarizeText': grpc.unary_unary_rpc_method_handler(
                    servicer.SummarizeText,
                    request_deserializer=agents__service__pb2.SummarizationRequest.FromString,
                    response_serializer=agents__service__pb2.SummarizationResponse.SerializeToString,
            ),
            'ProcessChat': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessChat,
                    request_deserializer=agents__service__pb2.ChatRequest.FromString,
                    response_serializer=agents__service__pb2.ChatResponse.SerializeToString,
            ),
            'GetChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatHistory,
                    request_deserializer=agents__service__pb2.ChatHistoryRequest.FromString,
                    response_serializer=agents__service__pb2.ChatHistoryResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=agents__service__pb2.HealthCheckRequest.FromString,
                    response_serializer=agents__service__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agents.AgentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('agents.AgentsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AgentsService(object):
    """Main Agents Service
    """

    @staticmethod
    def AnalyzeContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/AnalyzeContent',
            agents__service__pb2.ContentAnalysisRequest.SerializeToString,
            agents__service__pb2.ContentAnalysisResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExtractKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/ExtractKeywords',
            agents__service__pb2.KeywordExtractionRequest.SerializeToString,
            agents__service__pb2.KeywordExtractionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeSentiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/AnalyzeSentiment',
            agents__service__pb2.SentimentAnalysisRequest.SerializeToString,
            agents__service__pb2.SentimentAnalysisResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRecommendations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/GetRecommendations',
            agents__service__pb2.RecommendationRequest.SerializeToString,
            agents__service__pb2.RecommendationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUserPreferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/UpdateUserPreferences',
            agents__service__pb2.UserPreferencesRequest.SerializeToString,
            agents__service__pb2.UserPreferencesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/GenerateContent',
            agents__service__pb2.ContentGenerationRequest.SerializeToString,
            agents__service__pb2.ContentGenerationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SummarizeText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/SummarizeText',
            agents__service__pb2.SummarizationRequest.SerializeToString,
            agents__service__pb2.SummarizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessChat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/ProcessChat',
            agents__service__pb2.ChatRequest.SerializeToString,
            agents__service__pb2.ChatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/GetChatHistory',
            agents__service__pb2.ChatHistoryRequest.SerializeToString,
            agents__service__pb2.ChatHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/agents.AgentsService/HealthCheck',
            agents__service__pb2.HealthCheckRequest.SerializeToString,
            agents__service__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
